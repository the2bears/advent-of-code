(ns a-o-c-2017.day21
  (:require [clojure.java.io :as io]
            [clojure.string :as str]
            [blancas.kern.core :refer :all]
            [blancas.kern.lexer.basic :refer :all]))

(def data
  (slurp (io/resource "day21.txt")))

(def test-data "../.# => ##./#../...
.#./..#/### => #..#/..../..../#..#")

(defn process-data [data]
  (str/split-lines data))

(def cell (<|> (sym \.) (sym \#)))
(def row (<+> cell cell (optional cell)))
(def pattern (sep-by (sym \/) row))
(def assignment (skip-ws (<+> (sym \=) (sym \>))))
(def full-line (sep-by assignment pattern))

(value full-line  "##./##./... => .#./.#./...")

(defn row->points [row y]
  (->> (map-indexed #(when (= %2 \#) [%1 y]) row)
       (remove nil?)))

(defn pattern->points [pattern]
  (->> (map-indexed #(row->points %2 %1) pattern)
       (apply concat)))

(pattern->points (first (value full-line  "#.#/##./... => .#./.#./...")))
